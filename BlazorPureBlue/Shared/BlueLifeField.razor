@inject Blazored.LocalStorage.ISyncLocalStorageService ls
<div>
    @if (IsActive == true)
    {
        @if (Model.IsChecked)
        {
            <span class="badge badge-primary">
                <input class="form-check" type="checkbox" @bind=Model.IsChecked @onmouseout="@(() => OnMouseOut.InvokeAsync("e"))"/>
            </span>
        }
        else
        {
            <span class="badge badge-secondary">
                <input class="form-check" type="checkbox" @bind=Model.IsChecked @onmouseout="@(() => OnMouseOut.InvokeAsync("e"))" />
            </span>
        }

    }
    else
    {
        @if (Model.IsChecked)
        {
            <span class="badge badge-primary">
                <input class="form-check" type="checkbox" @bind=Model.IsChecked disabled />
            </span>
        }
        else
        {
            <span class="badge badge-secondary">
                <input class="form-check" type="checkbox" @bind=Model.IsChecked disabled />
            </span>
        }
    }
</div>
@code {

    [Parameter]
    public bool IsActive { get; set; }
    [Parameter]
    public BlueLifeFieldModel Model { get; set; }
    [Parameter]
    public EventCallback OnMouseOut { get; set; }





}
